/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.cm.tsi.pi.syshotel;

import br.edu.utfpr.cm.pi.conexao.TransactionUtil;
import br.edu.utfpr.cm.pi.dao.DaoApartamento;
import br.edu.utfpr.cm.pi.dao.DaoCliente;
import br.edu.utfpr.cm.pi.dao.DaoReserva;
import br.edu.utfpr.cm.pi.modal.Apartamento;
import br.edu.utfpr.cm.pi.modal.Cliente;
import br.edu.utfpr.cm.pi.modal.Reserva;
import br.edu.utfpr.cm.tsi.pi.sessao.Data;
import br.edu.utfpr.cm.tsi.pi.syshotel.Util.Util;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author JoaoPaulo
 */
public class JDialogCadastrarReservas extends javax.swing.JDialog {

    /**
     * Creates new form JDialogCadastrarReservas_
     */
    public JDialogCadastrarReservas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelReservaImagem = new javax.swing.JLabel();
        jLabelImage = new javax.swing.JLabel();
        ftfDataSaida = new javax.swing.JFormattedTextField();
        jLabelReservaDataSaida = new javax.swing.JLabel();
        ftfDataEntr = new javax.swing.JFormattedTextField();
        jLabelreservaDataEntrada = new javax.swing.JLabel();
        jLabelreservaCliente = new javax.swing.JLabel();
        tfCliente = new javax.swing.JTextField();
        tfAptDescricao = new javax.swing.JTextField();
        jLabelReservaApartamento = new javax.swing.JLabel();
        jLabelReservaCodigo = new javax.swing.JLabel();
        tfCod = new javax.swing.JTextField();
        btFechar = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btObterReserva = new javax.swing.JButton();
        btObterApt = new javax.swing.JButton();
        btObterCliente = new javax.swing.JButton();
        tfIdApt = new javax.swing.JTextField();
        tfIdCliente = new javax.swing.JTextField();
        btDeletar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btLimpar = new javax.swing.JButton();
        tfAndar = new javax.swing.JTextField();
        tfNumero = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(714, 347));
        setMinimumSize(new java.awt.Dimension(714, 347));
        setPreferredSize(new java.awt.Dimension(714, 347));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelReservaImagem.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelReservaImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelReservaImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/reserva.png"))); // NOI18N
        jLabelReservaImagem.setMaximumSize(new java.awt.Dimension(760, 80));
        jLabelReservaImagem.setMinimumSize(new java.awt.Dimension(760, 80));
        jLabelReservaImagem.setPreferredSize(new java.awt.Dimension(760, 80));
        getContentPane().add(jLabelReservaImagem, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 210, 40));

        jLabelImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/Reservar-icon.png"))); // NOI18N
        getContentPane().add(jLabelImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, 128, 128));

        try {
            ftfDataSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataSaida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(ftfDataSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 90, 25));

        jLabelReservaDataSaida.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelReservaDataSaida.setText("Data Saída:");
        getContentPane().add(jLabelReservaDataSaida, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 300, -1, -1));

        try {
            ftfDataEntr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataEntr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(ftfDataEntr, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 90, 25));

        jLabelreservaDataEntrada.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelreservaDataEntrada.setText("Data Entrada:");
        getContentPane().add(jLabelreservaDataEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        jLabelreservaCliente.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelreservaCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelreservaCliente.setText("Cod Cliente:");
        getContentPane().add(jLabelreservaCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        tfCliente.setEditable(false);
        tfCliente.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(tfCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 170, 25));

        tfAptDescricao.setEditable(false);
        tfAptDescricao.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(tfAptDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 170, 25));

        jLabelReservaApartamento.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelReservaApartamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelReservaApartamento.setText("Cod. Apt:");
        getContentPane().add(jLabelReservaApartamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        jLabelReservaCodigo.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabelReservaCodigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelReservaCodigo.setText("Código:");
        getContentPane().add(jLabelReservaCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, -1));

        tfCod.setEditable(false);
        tfCod.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(tfCod, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 60, 25));

        btFechar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/Close.png"))); // NOI18N
        btFechar.setToolTipText("Fechar");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });
        getContentPane().add(btFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 65, 41));

        btSalvar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/save01.png"))); // NOI18N
        btSalvar.setToolTipText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 370, 65, 41));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 69, 800, 10));

        jSeparator2.setMaximumSize(new java.awt.Dimension(800, 1));
        jSeparator2.setMinimumSize(new java.awt.Dimension(800, 1));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 800, 1));

        btObterReserva.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btObterReserva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/Add.png"))); // NOI18N
        btObterReserva.setToolTipText("Pesquisar Reservas");
        btObterReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btObterReservaActionPerformed(evt);
            }
        });
        getContentPane().add(btObterReserva, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 30, 25));

        btObterApt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btObterApt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/Add.png"))); // NOI18N
        btObterApt.setToolTipText("Pesquisar Apartamento");
        btObterApt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btObterAptActionPerformed(evt);
            }
        });
        getContentPane().add(btObterApt, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, 30, 25));

        btObterCliente.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btObterCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/Add.png"))); // NOI18N
        btObterCliente.setToolTipText("Pesquisar Cliente");
        btObterCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btObterClienteActionPerformed(evt);
            }
        });
        getContentPane().add(btObterCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 150, 30, 25));

        tfIdApt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(tfIdApt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 60, 25));
        getContentPane().add(tfIdCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 60, 25));

        btDeletar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/trash.png"))); // NOI18N
        btDeletar.setToolTipText("Excluir");
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btDeletar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, 65, 41));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Nome:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setText("Descrição:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, -1, -1));

        btLimpar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/utfpr/cm/tsi/pi/icons/clear02.png"))); // NOI18N
        btLimpar.setToolTipText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 65, 41));

        tfAndar.setEditable(false);
        tfAndar.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        getContentPane().add(tfAndar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 60, 25));

        tfNumero.setEditable(false);
        getContentPane().add(tfNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 170, 25));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Número:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, -1, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("Andar:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        setSize(new java.awt.Dimension(816, 488));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (Util.imprimirConfirmacao("Deseja Salvar?")) {
            salvar();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btObterReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btObterReservaActionPerformed
        obterReserva();
    }//GEN-LAST:event_btObterReservaActionPerformed

    private void btObterAptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btObterAptActionPerformed
        obterApt();
    }//GEN-LAST:event_btObterAptActionPerformed

    private void btObterClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btObterClienteActionPerformed
        obterCliente();
    }//GEN-LAST:event_btObterClienteActionPerformed

    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed
        if (Util.imprimirConfirmacao("Desejar Deletar")) {
            remover();
        }
    }//GEN-LAST:event_btDeletarActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        if (Util.imprimirConfirmacao("Deseja Sair?")) {
            dispose();
        }
    }//GEN-LAST:event_btFecharActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        if (Util.imprimirConfirmacao("Deseja limpar ?")) {
            novo();
        }
    }//GEN-LAST:event_btLimparActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDeletar;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btObterApt;
    private javax.swing.JButton btObterCliente;
    private javax.swing.JButton btObterReserva;
    private javax.swing.JButton btSalvar;
    private javax.swing.JFormattedTextField ftfDataEntr;
    private javax.swing.JFormattedTextField ftfDataSaida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelReservaApartamento;
    private javax.swing.JLabel jLabelReservaCodigo;
    private javax.swing.JLabel jLabelReservaDataSaida;
    private javax.swing.JLabel jLabelReservaImagem;
    private javax.swing.JLabel jLabelreservaCliente;
    private javax.swing.JLabel jLabelreservaDataEntrada;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField tfAndar;
    private javax.swing.JTextField tfAptDescricao;
    private javax.swing.JTextField tfCliente;
    private javax.swing.JTextField tfCod;
    private javax.swing.JTextField tfIdApt;
    private javax.swing.JTextField tfIdCliente;
    private javax.swing.JTextField tfNumero;
    // End of variables declaration//GEN-END:variables

    private void salvar() {
        salvarReservas();
        salvarApt();
        salvarCliente();
        novo();
    }

    private void salvarReservas() {

        if (verificarCampos()) {
            try {
                Reserva reservar = new Reserva();
                if (!tfCod.getText().isEmpty()) {  //verifica se o campo Codigo esta vazio
                    reservar.setId(Integer.parseInt(tfCod.getText()));
                }
                reservar.setDataDeEntrada(Util.stringParaCalendar(ftfDataEntr.getText()));
                reservar.setDataDeSaida(Util.stringParaCalendar(ftfDataSaida.getText()));
                reservar.setStatus("Ativa");

//                reservar.setApt(new DaoApartamento().obterPorId(Integer.parseInt(tfIdApt.getText())));
//                reservar.setCli(new DaoCliente().obterPorId(Integer.parseInt(tfIdCliente.getText())));
                TransactionUtil.beginTransaction();
                new DaoReserva().persistir(reservar);

                TransactionUtil.commit();
            } catch (Exception e) {
                TransactionUtil.rollback();
                novo();
                JOptionPane.showMessageDialog(rootPane, e);
                Logger.getLogger(JDialogCadastrarCliente.class.getName()).log(Level.SEVERE, null, e);//erro
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Contem campo vazio ou tipo incorreto de dado !");
        }
    }

    private void salvarCliente() {
        if (verificarCampos()) {
            try {
                Cliente cliente = new Cliente();
                if (!tfIdCliente.getText().isEmpty()) {
                    cliente.setId(Integer.parseInt(tfIdCliente.getText()));
                }
                cliente.setNome(tfCliente.getText()); // AKI

                TransactionUtil.beginTransaction();

                new DaoCliente().persistir(cliente);
                TransactionUtil.commit();
            } catch (RuntimeException e) {
                TransactionUtil.rollback();
                novo();
                Logger.getLogger(JDialogCadastrarCliente.class.getName()).log(Level.SEVERE, null, e);//erro
                JOptionPane.showMessageDialog(rootPane, e);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Contem campo vazio ou tipo incorreto de dado !");
        }
    }

    private void salvarApt() {
        if (verificarCampos()) {
            try {
                Apartamento apt = new Apartamento();
                if (!tfIdApt.getText().isEmpty()) {
                    apt.setId(Integer.parseInt(tfIdApt.getText()));
                }
                apt.setNumero(Integer.parseInt(tfNumero.getText())); //; E AKI
                apt.setAndar(Integer.parseInt(tfAndar.getText()));
                apt.setDescricao(tfAptDescricao.getText());
                TransactionUtil.beginTransaction();
                new DaoApartamento().persistir(apt);
                TransactionUtil.commit();
            } catch (Exception e) {
                TransactionUtil.rollback();
                Logger.getLogger(JDialogCadastrarCliente.class.getName()).log(Level.SEVERE, null, e);//erro                
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Contem campo vazio ou tipo incorreto de dado !");
        }
    }

    protected boolean verificarCampos() {
        if (!tfCliente.getText().trim().equals("") && !tfCliente.getText().trim().isEmpty()
                && !tfAptDescricao.getText().trim().equals("") && !tfAptDescricao.getText().trim().isEmpty()
                && !ftfDataEntr.getText().trim().equals("") && !ftfDataEntr.getText().trim().isEmpty()) {
            return true;
        }
        return false;
    }

    private void novo() {
        tfCod.setText(null);
        tfCliente.setText(null);
        tfAptDescricao.setText(null);
        ftfDataEntr.setText(null);
        ftfDataSaida.setText(null);
        tfIdApt.setText(null);
        tfIdCliente.setText(null);
    }

    private void remover() {

        if (!tfCod.getText().isEmpty()) {
            int id = Integer.parseInt(tfCod.getText().trim());
            TransactionUtil.beginTransaction();
            try {
                DaoReserva dao = new DaoReserva();
                dao.remover(dao.obterPorId(id));
                TransactionUtil.commit();
            } catch (Exception e) {
                TransactionUtil.rollback();
                Logger.getLogger(JDialogCadastrarCliente.class.getName()).log(Level.SEVERE, null, e);//erro
            }
            novo();

        } else {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro selecionando!");
        }
    }

    private void obterReserva() {
        JDialog dialog = new JDialogPesquisaReservas(null, true);
        Util.abrirJDialogCentralizado(dialog);

        if (Data.hash.get("reserva") == null) {
            return;
        } else {
            if (Data.hash.get("reserva") instanceof Reserva) {
                Reserva r = (Reserva) Data.hash.get("reserva");
                Data.hash.remove("reserva");
                if (r == null) {
                    return;
                }
                tfCod.setText(String.valueOf(r.getId()));
                ftfDataEntr.setText(Util.calendarParaString(r.getDataDeEntrada()));
                ftfDataSaida.setText(Util.calendarParaString(r.getDataDeSaida()));

                tfIdApt.setText(String.valueOf(r.getId()));
                tfAptDescricao.setText(r.getApt().getDescricao());

                tfIdCliente.setText(String.valueOf(r.getId()));
                tfCliente.setText(r.getCli().getNome());
            } else {
                JOptionPane.showMessageDialog(null, "Selecione uma Reserva.");
                Data.hash.remove("reserva");
            }
        }
    }

    private void obterApt() {
        JDialog dialog = new JDialogPesquisarApartamento(null, true);
        Util.abrirJDialogCentralizado(dialog);

        if (Data.hash.get("apartamento") == null) {
            return;
        } else {
            if (Data.hash.get("apartamento") instanceof Apartamento) {
                Apartamento apartamento = (Apartamento) Data.hash.get("apartamento");
                Data.hash.remove("apartamento");
                if (apartamento == null) {
                    return;
                }
                tfIdApt.setText(String.valueOf(apartamento.getId()));
                tfAptDescricao.setText(apartamento.getDescricao());
                tfNumero.setText(String.valueOf(apartamento.getNumero()));
                tfAndar.setText(String.valueOf(apartamento.getAndar()));

            } else {
                JOptionPane.showMessageDialog(null, "Selecione um Apartamento.");
                Data.hash.remove("apartamento");
            }
        }

    }

    private void obterCliente() {
        JDialog dialog = new JDialogPesqCliente(null, true);
        Util.abrirJDialogCentralizado(dialog);

        if (Data.hash.get("cliente") == null) {
            return;
        } else {
            if (Data.hash.get("cliente") instanceof Cliente) {
                Cliente cliente = (Cliente) Data.hash.get("cliente");
                Data.hash.remove("cliente");
                if (cliente == null) {
                    return;
                }
                tfCliente.setText(cliente.getNome());
                tfIdCliente.setText(cliente.getId().toString());

            } else {
                JOptionPane.showMessageDialog(this, "Selecione um Cliente.");
                Data.hash.remove("cliente");//limpra o conteudo do map
            }
        }
    }
}
